 // onLeave() {
      //   gsap.to(
      //     ".ver_line_02",
      //     {
      //       height: 200,
      //       transformOrigin: "top top",
      //       ease: "power2",
      //       duration: 3,
      //     },
      //     "-=28",
      //   );
      // },




       // let gispyContainer = document.querySelector(".circle_line_gispy");
  // gispyContainer.addEventListener("wheel", (e) => {
  //   e.stopPropagation();
  // });




   // let gispyBoat = {
  //   container: document.querySelector(".gispy_two"),
  //   renderer: "svg",
  //   loop: false,
  //   autoplay: false,
  //   path: "LottieAnimation/GISPY_Boat.json",
  // };

  // let gispyBoatAnim = bodymovin.loadAnimation(gispyBoat);

  // function playAnimOnScoll(options) {
  //   LottieScrollTrigger({
  //     trigger: options.trigger,
  //     markers: true,
  //     start: "center 50%",
  //     toggleActions: "play restart play reset",
  //     onEnter: function () {
  //       options.anim.play();
  //     },
  //   });
  // }

  // playAnimOnScoll({
  //   trigger: ".float_left",
  //   anim: gispyBoatAnim,
  //   pin: true,
  // });








// /**
//  * Video Gallery
//  */

// let isHovering = false;
// const galleries = document.querySelector(".galleries");
// const galleries_02 = document.querySelector(".galleries_02");
// const hoverGallery = galleries;
// const hoverGallery_02 = galleries_02;
// console.log(galleries);
// console.log(galleries_02);

// const boat = document.querySelector(".boat");
// const gallery_sec = document.querySelectorAll(".gallery_02");
// // console.log(gallery_sec);
// const gallery = document.querySelectorAll(".gallery");
// console.log(gallery);
// const videoGallery = document.querySelectorAll(".video_style");
// const video_container = document.querySelector(".vdieo_gallery");
// console.log(video_container);
// const videos = document.querySelectorAll(".vdieo_gallery video");
// console.log(videos);

// for (let i = 0; i < videos.length; i++) {
//   videos[i].muted = true;
// }

// video_container.addEventListener("mouseover", () => {
//   const clickEvent = new MouseEvent("click", {
//     bubbles: true,
//     cancelable: true,
//     view: window,
//   });

//   video_container.dispatchEvent(clickEvent);
//   console.log("hover_done");
// });
// boat.addEventListener("mouseover", () => {
//   const clickEvent = new MouseEvent("click", {
//     bubbles: true,
//     cancelable: true,
//     view: window,
//   });

//   boat.dispatchEvent(clickEvent);
//   console.log("hover_done");
// });

// videos.forEach((video) => {
//   video.addEventListener("mouseover", () => {
//     // videos.forEach(video => video.pause())
//     video.muted = false;
//     video.currentTime = 0;
//     video.play();
//   });

//   video.addEventListener("mouseout", () => {
//     videos.forEach((video) => video.play());
//     video.muted = true;
//   });
// });

// //  video_v.forEach((video) => {
// //     video.addEventListener("mouseover", () => {
// //       for (let i=0; i< video_v.length; i++) {
// //         video_v[i].pause();
// //         video_v[i].muted = true;
// //         console.log("muted done");
// //       }
// //       video_v.forEach(video => video.muted = true)
// //       video.muted = false;
// //       video.play();
// //       // video.currentTime = 0

// //       console.log("video_muted");
// //     })
// //   })

// // video_v.forEach((video) => {
// //   video.addEventListener("mouseout", () => {
// //     video_v.forEach(video => video.muted = true)
// //     for (let i=0; i< video_v.length; i++) {
// //       video_v[i].muted = true;
// //       video_v[i].autoplay = true;
// //       video_v[i].loop = true;
// //       video_v[i].playsInline = true;
// //       video_v[i].preload = "none";
// //       video_v[i].play();
// //       console.log("muted done");

// //     }
// //     video.muted = true;
// //     // video.play();
// //     // video.pause();
// //     console.log("video_muted");
// //   })
// // })

// // function playVideoWithAudio (video) {
// //   video.play();
// //   video.currentTime = 0;
// //   video.muted = false;

// //   videos.forEach((v) => {
// //     if(v !== video) {
// //       v.muted = true;
// //     }
// //   })
// // }

// // video_v.play()
// videoGallery.forEach((video_style) => {
//   video_style.addEventListener("mouseover", () => {
//     isHovering = true;
//     // video_style.forEach(video_style => video_style.classList.remove('up'))
//     // video_style.classList.add('up')
//     // video_style.style.zIndex = "1"
//     gallery.forEach((gallery_selected) => {
//       gallery_selected.addEventListener("mouseover", () => {
//         gallery.forEach((gallery_selected) =>
//           gallery_selected.classList.remove("gallery_up"),
//         );
//         gallery_selected.classList.add("gallery_up");
//         // gallery_selected.style.zIndex = "9999"
//         console.log(gallery_selected);
//       });
//     });
//     gallery_sec.forEach((gallery_selected) => {
//       gallery_selected.addEventListener("mouseover", () => {
//         gallery_sec.forEach((gallery_selected) =>
//           gallery_selected.classList.remove("gallery_up"),
//         );
//         gallery_selected.classList.add("gallery_up");
//         // gallery_selected.style.zIndex = "9999"
//         console.log(gallery_selected);
//       });
//     });

//     gsap.to(video_style, {
//       onStart: function () {
//         for (let i = 0; i < gallery.length; i++) {
//           // gallery[i].classList.remove("gallery");
//           // gallery[i].classList.add("gallery_stop");
//           gallery[i].style.animationPlayState = "paused";
//           // gallery_sec[i].style.animationPlayState = "paused";

//           hoverGallery.onmouseover = function () {
//             hoverGallery.style.zIndex = "999999";
//             hoverGallery_02.style.zIndex = "1";
//             console.log("done");
//           };

//           hoverGallery_02.onmouseover = function () {
//             hoverGallery.style.zIndex = "1";
//             hoverGallery_02.style.zIndex = "999999";
//             console.log("done_02");
//           };

//           // console.log(galleries[i]);
//           // if (hoverGallery) {
//           //   gallery[i].classList.add('up')
//           // } else {
//           //   gallery_sec[i].classList.add('up')
//           // }

//           // gallery_sec[i].classList.remove("gallery_02");
//           // gallery_sec[i].classList.add("gallery_02_stop");
//         }
//       },
//       scale: 1.5,
//       zIndex: 9999,
//       duration: 0.3,
//     });

//     // video_v.muted = false;
//     // for (let i = 0; i< gallery.length; i++) {
//     //   console.log(gallery[i]);

//     //   gallery[i].classlist.remove("gallery")
//     //     gallery[i].className.add("gallery_stop")

//     //   gallery[i].classlist.remove("gallery_02")
//     //     gallery[i].className.add("gallery_02_stop")

//     // }
//   });

//   video_style.addEventListener("mouseout", () => {
//     isHovering = false;
//     gsap.to(video_style, {
//       scale: 1,
//       zIndex: 0,
//       duration: 0.5,
//       onStart: function () {
//         for (let i = 0; i < gallery.length; i++) {
//           // gallery[i].classList.remove("gallery_stop");
//           // gallery[i].classList.add("gallery");
//           // gallery_sec[i].classList.remove("gallery_02_stop");
//           // gallery_sec[i].classList.add("gallery_02");
//           gallery[i].style.animationPlayState = "running";
//           // gallery_sec[i].style.animationPlayState = "running";
//           // hoverGallery.style.zIndex = ("4")
//           hoverGallery.onmouseout = function () {
//             hoverGallery.style.zIndex = "1";
//             hoverGallery_02.style.zIndex = "0";
//           };

//           hoverGallery_02.onmouseout = function () {
//             hoverGallery.style.zIndex = "1";
//             hoverGallery_02.style.zIndex = "0";
//           };
//         }
//       },
//     });

//     // if (gallery.classlist.contains("gallery_stop")) {
//     //   gallery.className.toggle("gallery")
//     // }
//     // if (gallery.classlist.contains("gallery_02_stop")) {
//     //   gallery.className.toggle("gallery_02")
//     // }
//   });
// });





//   function canvas() {
  //     const canvas = document.querySelector(".gispy_two");
  //     const context = canvas.getContext("2d");

  //     canvas.width = window.innerWidth;
  //     canvas.height = window.innerHeight;

  //     window.addEventListener("resize", function () {
  //       canvas.width = window.innerWidth;
  //       canvas.height = window.innerHeight;
  //       render();
  //     });

  //     function files(index) {
  //       var data = `
  //       Images/gispy_seq/Comp 800.jpg
  //       Images/gispy_seq/Comp 801.jpg
  //       Images/gispy_seq/Comp 802.jpg
  //       Images/gispy_seq/Comp 803.jpg
  //       Images/gispy_seq/Comp 804.jpg
  //       Images/gispy_seq/Comp 805.jpg
  //       Images/gispy_seq/Comp 806.jpg
  //       Images/gispy_seq/Comp 807.jpg
  //       Images/gispy_seq/Comp 808.jpg
  //       Images/gispy_seq/Comp 809.jpg
  //       Images/gispy_seq/Comp 810.jpg
  //       Images/gispy_seq/Comp 811.jpg
  //       Images/gispy_seq/Comp 812.jpg
  //       Images/gispy_seq/Comp 813.jpg
  //       Images/gispy_seq/Comp 814.jpg
  //       Images/gispy_seq/Comp 815.jpg
  //       Images/gispy_seq/Comp 816.jpg
  //       Images/gispy_seq/Comp 817.jpg
  //       Images/gispy_seq/Comp 818.jpg
  //       Images/gispy_seq/Comp 819.jpg
  //       Images/gispy_seq/Comp 820.jpg
  //       Images/gispy_seq/Comp 821.jpg
  //       Images/gispy_seq/Comp 822.jpg
  //       Images/gispy_seq/Comp 823.jpg
  //       Images/gispy_seq/Comp 824.jpg
  //       Images/gispy_seq/Comp 825.jpg
  //       Images/gispy_seq/Comp 826.jpg
  //       Images/gispy_seq/Comp 827.jpg
  //       Images/gispy_seq/Comp 828.jpg
  //       Images/gispy_seq/Comp 829.jpg
  //       Images/gispy_seq/Comp 830.jpg
  //       Images/gispy_seq/Comp 831.jpg
  //       Images/gispy_seq/Comp 832.jpg
  //       Images/gispy_seq/Comp 833.jpg
  //       Images/gispy_seq/Comp 834.jpg
  //       Images/gispy_seq/Comp 835.jpg
  //       Images/gispy_seq/Comp 836.jpg
  //       Images/gispy_seq/Comp 837.jpg
  //       Images/gispy_seq/Comp 838.jpg
  //       Images/gispy_seq/Comp 839.jpg
  //       Images/gispy_seq/Comp 840.jpg
  //       Images/gispy_seq/Comp 841.jpg
  //       Images/gispy_seq/Comp 842.jpg
  //       Images/gispy_seq/Comp 843.jpg
  //       Images/gispy_seq/Comp 844.jpg
  //       Images/gispy_seq/Comp 845.jpg
  //       Images/gispy_seq/Comp 846.jpg
  //       Images/gispy_seq/Comp 847.jpg
  //       Images/gispy_seq/Comp 848.jpg
  //       Images/gispy_seq/Comp 849.jpg
  //       Images/gispy_seq/Comp 850.jpg
  //       Images/gispy_seq/Comp 851.jpg
  //       Images/gispy_seq/Comp 852.jpg
  //       Images/gispy_seq/Comp 853.jpg
  //       Images/gispy_seq/Comp 854.jpg
  //       Images/gispy_seq/Comp 855.jpg
  //       Images/gispy_seq/Comp 856.jpg
  //       Images/gispy_seq/Comp 857.jpg
  //       Images/gispy_seq/Comp 858.jpg
  //       Images/gispy_seq/Comp 859.jpg
  //       Images/gispy_seq/Comp 860.jpg
  //       Images/gispy_seq/Comp 861.jpg
  //       Images/gispy_seq/Comp 862.jpg
  //       Images/gispy_seq/Comp 863.jpg
  //       Images/gispy_seq/Comp 864.jpg
  //       Images/gispy_seq/Comp 865.jpg
  //       Images/gispy_seq/Comp 866.jpg
  //       Images/gispy_seq/Comp 867.jpg
  //       Images/gispy_seq/Comp 868.jpg
  //       Images/gispy_seq/Comp 869.jpg
  //       Images/gispy_seq/Comp 870.jpg
  //       Images/gispy_seq/Comp 871.jpg
  //       Images/gispy_seq/Comp 872.jpg
  //       Images/gispy_seq/Comp 872.jpg
  //       Images/gispy_seq/Comp 873.jpg
  //       Images/gispy_seq/Comp 874.jpg
  //       Images/gispy_seq/Comp 875.jpg
  //       Images/gispy_seq/Comp 876.jpg
  //       Images/gispy_seq/Comp 877.jpg
  //       Images/gispy_seq/Comp 878.jpg
  //       Images/gispy_seq/Comp 879.jpg
  //       Images/gispy_seq/Comp 880.jpg
  //       Images/gispy_seq/Comp 881.jpg
  //       Images/gispy_seq/Comp 882.jpg
  //       Images/gispy_seq/Comp 883.jpg
  //       Images/gispy_seq/Comp 884.jpg
  //       Images/gispy_seq/Comp 885.jpg
  //       Images/gispy_seq/Comp 886.jpg
  //       Images/gispy_seq/Comp 887.jpg
  //       Images/gispy_seq/Comp 888.jpg
  //       Images/gispy_seq/Comp 889.jpg
  //       Images/gispy_seq/Comp 890.jpg
  //       Images/gispy_seq/Comp 891.jpg
  //  `;
  //       return data.split("\n")[index];
  //     }

  //     const frameCount = 90;

  //     const images = [];
  //     const imageSeq = {
  //       frame: 1,
  //     };

  //     for (let i = 0; i < frameCount; i++) {
  //       const img = new Image();
  //       img.src = files(i);
  //       images.push(img);
  //     }

  //     gsap.to(imageSeq, {
  //       frame: frameCount - 1,
  //       snap: "frame",
  //       ease: `none`,
  //       scrollTrigger: {
  //         scrub: 0.15,
  //         trigger: ".circle_line_gispy",
  //         //   set start end according to preference
  //         start: "top top",
  //         end: "300% center",
  //         // scroller: `#main`,
  //       },
  //       onUpdate: render,
  //     });

  //     images[1].onload = render;

  //     function render() {
  //       scaleImage(images[imageSeq.frame], context);
  //     }

  //     function scaleImage(img, ctx) {
  //       var canvas = ctx.canvas;
  //       var hRatio = canvas.width / img.width;
  //       var vRatio = canvas.height / img.height;
  //       var ratio = Math.min(hRatio, vRatio);
  //       var centerShift_x = (canvas.width - img.width * ratio) / 2;
  //       var centerShift_y = (canvas.height - img.height * ratio) / 2;
  //       ctx.clearRect(0, 0, canvas.width, canvas.height);
  //       ctx.drawImage(
  //         img,
  //         0,
  //         0,
  //         img.width,
  //         img.height,
  //         centerShift_x,
  //         centerShift_y,
  //         img.width * ratio,
  //         img.height * ratio,
  //       );
  //     }
  //     ScrollTrigger.create({
  //       trigger: ".circle_line_gispy",
  //       pin: true,
  //       // markers:true,
  //       // scroller: `#main`,
  //       //   set start end according to preference
  //       start: "top top",
  //       end: "300% center",
  //     });
  //   }
  //   canvas();

  // console.clear();
  // /* The encoding is super important here to enable frame-by-frame scrubbing. */

  // // ffmpeg -i ~/Downloads/Toshiba\ video/original.mov -movflags faststart -vcodec libx264 -crf 23 -g 1 -pix_fmt yuv420p output.mp4
  // // ffmpeg -i ~/Downloads/Toshiba\ video/original.mov -vf scale=960:-1 -movflags faststart -vcodec libx264 -crf 20 -g 1 -pix_fmt yuv420p output_960.mp4

  // const video = document.querySelector(".video-background");
  // let src = video.currentSrc || video.src;
  // console.log(video, src);

  // /* Make sure the video is 'activated' on iOS */
  // function once(el, event, fn, opts) {
  //   var onceFn = function (e) {
  //     el.removeEventListener(event, onceFn);
  //     fn.apply(this, arguments);
  //   };
  //   el.addEventListener(event, onceFn, opts);
  //   return onceFn;
  // }

  // once(document.documentElement, "touchstart", function (e) {
  //   video.play();
  //   video.pause();
  // });

  /* ---------------------------------- */
  /* Scroll Control! */

  // gsap.registerPlugin(ScrollTrigger);

  // let tl = gsap.timeline({
  //   defaults: { duration: 1 },
  //   scrollTrigger: {
  //     trigger: ".circle_line_gispy",
  //     start: "top top",
  //     end: "300% center",
  //     scrub: 2,
  //     pin: ".circle_line_gispy",
  //   },
  // });

  // once(video, "loadedmetadata", () => {
  //   tl.fromTo(
  //     video,
  //     {
  //       currentTime: 0,
  //     },
  //     {
  //       currentTime: video.duration || 1,
  //     },
  //   );
  // });

  // /* When first coded, the Blobbing was important to ensure the browser wasn't dropping previously played segments, but it doesn't seem to be a problem now. Possibly based on memory availability? */
  // setTimeout(function () {
  //   if (window["fetch"]) {
  //     fetch(src)
  //       .then((response) => response.blob())
  //       .then((response) => {
  //         var blobURL = URL.createObjectURL(response);

  //         var t = video.currentTime;
  //         once(document.documentElement, "touchstart", function (e) {
  //           video.play();
  //           video.pause();
  //         });

  //         video.setAttribute("src", blobURL);
  //         video.currentTime = t + 0.01;
  //       });
  //   }
  // }, 1000);

  /* ---------------------------------- */


  // console.clear();
  // /* The encoding is super important here to enable frame-by-frame scrubbing. */

  // // ffmpeg -i ~/Downloads/Toshiba\ video/original.mov -movflags faststart -vcodec libx264 -crf 23 -g 1 -pix_fmt yuv420p output.mp4
  // // ffmpeg -i ~/Downloads/Toshiba\ video/original.mov -vf scale=960:-1 -movflags faststart -vcodec libx264 -crf 20 -g 1 -pix_fmt yuv420p output_960.mp4

  // const video2 = document.querySelector(".video-background2");
  // let src2 = video2.currentSrc || video2.src2;
  // console.log(video2);
  // console.log(src2);

  // /* Make sure the video is 'activated' on iOS */
  // function once(el2, event2, fn2, opts2) {
  //   var onceFn2 = function (e2) {
  //     el2.removeEventListener(event2, onceFn2);
  //     fn2.apply(this, arguments);
  //   };
  //   el2.addEventListener(event2, onceFn2, opts2);
  //   return onceFn2;
  // }

  // once(document.documentElement, "touchstart", function (e2) {
  //   video2.play();
  //   video2.pause();
  // });

  // /* ---------------------------------- */
  // /* Scroll Control! */

  // // gsap.registerPlugin(ScrollTrigger);

  // let tl2 = gsap.timeline({
  //   defaults: { duration: 1 },
  //   scrollTrigger: {
  //     trigger: ".circle_line_queen",
  //     start: "0% 42%",
  //     end: "300% center",
  //     scrub: 2,
  //     pin: ".circle_line_queen",
  //   },
  // });

  // once(video2, "loadedmetadata", () => {
  //   tl2.fromTo(
  //     video2,
  //     {
  //       currentTime: 0,
  //     },
  //     {
  //       currentTime: video2.duration || 1,
  //     },
  //   );
  // });

  // /* When first coded, the Blobbing was important to ensure the browser wasn't dropping previously played segments, but it doesn't seem to be a problem now. Possibly based on memory availability? */
  // setTimeout(function () {
  //   if (window["fetch"]) {
  //     fetch(src2)
  //       .then((response2) => response2.blob())
  //       .then((response2) => {
  //         var blobURL2 = URL.createObjectURL(response2);

  //         var t2 = video2.currentTime;
  //         once(document.documentElement, "touchstart", function (e2) {
  //           video2.play();
  //           video2.pause();
  //         });

  //         video2.setAttribute("src", blobURL2);
  //         video2.currentTime = t2 + 0.01;
  //       });
  //   }
  // }, 1000);

  /* ---------------------------------- */


 // console.clear();
  // /* The encoding is super important here to enable frame-by-frame scrubbing. */

  // // ffmpeg -i ~/Downloads/Toshiba\ video/original.mov -movflags faststart -vcodec libx264 -crf 23 -g 1 -pix_fmt yuv420p output.mp4
  // // ffmpeg -i ~/Downloads/Toshiba\ video/original.mov -vf scale=960:-1 -movflags faststart -vcodec libx264 -crf 20 -g 1 -pix_fmt yuv420p output_960.mp4

  // const video3 = document.querySelector(".video-background3");
  // let src3 = video3.currentSrc || video2.src3;
  // console.log(video3);
  // console.log(src3);

  // /* Make sure the video is 'activated' on iOS */
  // function once(el3, event3, fn3, opts3) {
  //   var onceFn3 = function (e3) {
  //     el3.removeEventListener(event3, onceFn3);
  //     fn3.apply(this, arguments);
  //   };
  //   el3.addEventListener(event3, onceFn3, opts3);
  //   return onceFn3;
  // }

  // once(document.documentElement, "touchstart", function (e3) {
  //   video3.play();
  //   video3.pause();
  // });

  // /* ---------------------------------- */
  // /* Scroll Control! */

  // // gsap.registerPlugin(ScrollTrigger);

  // let tl3 = gsap.timeline({
  //   defaults: { duration: 1 },
  //   scrollTrigger: {
  //     trigger: ".sundy_times_ggr",
  //     start: "0% top",
  //     end: "300% center",
  //     scrub: 2,
  //     pin: ".sundy_times_ggr",
  //   },
  // });

  // once(video3, "loadedmetadata", () => {
  //   tl3.fromTo(
  //     video3,
  //     {
  //       currentTime: 0,
  //     },
  //     {
  //       currentTime: video3.duration || 1,
  //     },
  //   );
  // });

  // /* When first coded, the Blobbing was important to ensure the browser wasn't dropping previously played segments, but it doesn't seem to be a problem now. Possibly based on memory availability? */
  // setTimeout(function () {
  //   if (window["fetch"]) {
  //     fetch(src3)
  //       .then((response3) => response3.blob())
  //       .then((response3) => {
  //         var blobURL3 = URL.createObjectURL(response3);

  //         var t3 = video3.currentTime;
  //         once(document.documentElement, "touchstart", function (e3) {
  //           video3.play();
  //           video3.pause();
  //         });

  //         video3.setAttribute("src", blobURL3);
  //         video3.currentTime = t3 + 0.01;
  //       });
  //   }
  // }, 1000);

  // /* ---------------------------------- */



  // const half = gsap.timeline({
  //   scrollTrigger: {
  //     trigger: ".half_centery",
  //     scrub: 2,
  //     start: "top top",
  //     end: "+=700",
  //     // pin: true,
  //     // pinSpacing: true,
  //     // endTrigger: ".ss_03",
  //     // markers: true,
  //   },
  // });

  // half.to("body", { backgroundColor: "#3333", duration: 2, ease: "power2" });
  // const additionalY = { val: 0 };
  // let additionalYAnim;
  // let offset = 0;
  // const cols = gsap.utils.toArray(".col");

  // cols.forEach((col, i) => {
  //   const images = col.childNodes;

  //   // DUPLICATE IMAGES FOR LOOP
  //   images.forEach((image) => {
  //     var clone = image.cloneNode(true);
  //     col.appendChild(clone);
  //   });

  //   // SET ANIMATION
  //   images.forEach((item) => {
  //     let columnHeight = item.parentElement.clientHeight;
  //     let direction = i % 2 !== 0 ? "+=" : "-="; // Change direction for odd columns

  //     gsap.to(item, {
  //       y: direction + Number(columnHeight / 2),
  //       duration: 20,
  //       repeat: -1,
  //       ease: "none",
  //       modifiers: {
  //         y: gsap.utils.unitize((y) => {
  //           if (direction == "+=") {
  //             offset += additionalY.val;
  //             y = (parseFloat(y) - offset) % (columnHeight * 0.5);
  //           } else {
  //             offset += additionalY.val;
  //             y = (parseFloat(y) + offset) % -Number(columnHeight * 0.5);
  //           }

  //           return y;
  //         }),
  //       },
  //     });
  //   });
  // });

  // const imagesScrollerTrigger = ScrollTrigger.create({
  //   trigger: "section",
  //   start: "center center",
  //   end: "bottom 50%",
  //   onUpdate: function (self) {
  //     const velocity = self.getVelocity();
  //     if (velocity > 0) {
  //       if (additionalYAnim) additionalYAnim.kill();
  //       additionalY.val = -velocity / 2000;
  //       additionalYAnim = gsap.to(additionalY, { val: 0 });
  //     }
  //     if (velocity < 0) {
  //       if (additionalYAnim) additionalYAnim.kill();
  //       additionalY.val = -velocity / 3000;
  //       additionalYAnim = gsap.to(additionalY, { val: 0 });
  //     }
  //   },
  // });

  // const sections = gsap.utils.toArray(".section");
  // const titles = document.querySelectorAll(".title-container");
  // const descriptions = document.querySelectorAll(".description-container");
  // const imgsBig = document.querySelectorAll(".img-container-big");
  // const imgsSmall = document.querySelectorAll(".img-container-small");

  // ///////////////////////////
  // /// Intersection Observer
  // ///////////////////////////

  // const observer = new IntersectionObserver(
  //   (entries) => {
  //     entries.forEach((entry) => {
  //       entry.target.classList.toggle("visible", entry.isIntersecting);

  //       // Stop observing
  //       if (entry.isIntersecting) observer.unobserve(entry.target);
  //     });
  //   },
  //   { threshold: 0.5 },
  //   //   { rootMargin: "-100px" }
  // );

  // titles.forEach((title) => {
  //   observer.observe(title);
  // });

  // descriptions.forEach((description) => {
  //   observer.observe(description);
  // });

  // imgsBig.forEach((img) => {
  //   observer.observe(img);
  // });

  // imgsSmall.forEach((img) => {
  //   observer.observe(img);
  // });

  // ////////////////////////////////
  // /// Infinite Horizontal Scroll
  // ////////////////////////////////

  // let maxWidth = 0;

  // const getMaxWidth = () => {
  //   maxWidth = 0;
  //   sections.forEach((section) => {
  //     maxWidth += section.offsetWidth;
  //   });
  // };

  // getMaxWidth();

  // ScrollTrigger.addEventListener("refreshInit", getMaxWidth);

  // let scrollTween = gsap.to(sections, {
  //   x: () => -(maxWidth - window.innerWidth),
  //   ease: "none",
  //   scrollTrigger: {
  //     trigger: ".container",
  //     pin: true,
  //     scrub: true,
  //     start: 1,
  //     end: "+=5000",
  //     invalidateOnRefresh: true,
  //   },
  // });



   //   function canvas() {
  //     const canvas = document.querySelector(".gispy_two");
  //     const context = canvas.getContext("2d");

  //     canvas.width = window.innerWidth;
  //     canvas.height = window.innerHeight;

  //     window.addEventListener("resize", function () {
  //       canvas.width = window.innerWidth;
  //       canvas.height = window.innerHeight;
  //       render();
  //     });

  //     function files(index) {
  //       var data = `
  //       Images/gispy_seq/Comp 800.jpg
  //       Images/gispy_seq/Comp 801.jpg
  //       Images/gispy_seq/Comp 802.jpg
  //       Images/gispy_seq/Comp 803.jpg
  //       Images/gispy_seq/Comp 804.jpg
  //       Images/gispy_seq/Comp 805.jpg
  //       Images/gispy_seq/Comp 806.jpg
  //       Images/gispy_seq/Comp 807.jpg
  //       Images/gispy_seq/Comp 808.jpg
  //       Images/gispy_seq/Comp 809.jpg
  //       Images/gispy_seq/Comp 810.jpg
  //       Images/gispy_seq/Comp 811.jpg
  //       Images/gispy_seq/Comp 812.jpg
  //       Images/gispy_seq/Comp 813.jpg
  //       Images/gispy_seq/Comp 814.jpg
  //       Images/gispy_seq/Comp 815.jpg
  //       Images/gispy_seq/Comp 816.jpg
  //       Images/gispy_seq/Comp 817.jpg
  //       Images/gispy_seq/Comp 818.jpg
  //       Images/gispy_seq/Comp 819.jpg
  //       Images/gispy_seq/Comp 820.jpg
  //       Images/gispy_seq/Comp 821.jpg
  //       Images/gispy_seq/Comp 822.jpg
  //       Images/gispy_seq/Comp 823.jpg
  //       Images/gispy_seq/Comp 824.jpg
  //       Images/gispy_seq/Comp 825.jpg
  //       Images/gispy_seq/Comp 826.jpg
  //       Images/gispy_seq/Comp 827.jpg
  //       Images/gispy_seq/Comp 828.jpg
  //       Images/gispy_seq/Comp 829.jpg
  //       Images/gispy_seq/Comp 830.jpg
  //       Images/gispy_seq/Comp 831.jpg
  //       Images/gispy_seq/Comp 832.jpg
  //       Images/gispy_seq/Comp 833.jpg
  //       Images/gispy_seq/Comp 834.jpg
  //       Images/gispy_seq/Comp 835.jpg
  //       Images/gispy_seq/Comp 836.jpg
  //       Images/gispy_seq/Comp 837.jpg
  //       Images/gispy_seq/Comp 838.jpg
  //       Images/gispy_seq/Comp 839.jpg
  //       Images/gispy_seq/Comp 840.jpg
  //       Images/gispy_seq/Comp 841.jpg
  //       Images/gispy_seq/Comp 842.jpg
  //       Images/gispy_seq/Comp 843.jpg
  //       Images/gispy_seq/Comp 844.jpg
  //       Images/gispy_seq/Comp 845.jpg
  //       Images/gispy_seq/Comp 846.jpg
  //       Images/gispy_seq/Comp 847.jpg
  //       Images/gispy_seq/Comp 848.jpg
  //       Images/gispy_seq/Comp 849.jpg
  //       Images/gispy_seq/Comp 850.jpg
  //       Images/gispy_seq/Comp 851.jpg
  //       Images/gispy_seq/Comp 852.jpg
  //       Images/gispy_seq/Comp 853.jpg
  //       Images/gispy_seq/Comp 854.jpg
  //       Images/gispy_seq/Comp 855.jpg
  //       Images/gispy_seq/Comp 856.jpg
  //       Images/gispy_seq/Comp 857.jpg
  //       Images/gispy_seq/Comp 858.jpg
  //       Images/gispy_seq/Comp 859.jpg
  //       Images/gispy_seq/Comp 860.jpg
  //       Images/gispy_seq/Comp 861.jpg
  //       Images/gispy_seq/Comp 862.jpg
  //       Images/gispy_seq/Comp 863.jpg
  //       Images/gispy_seq/Comp 864.jpg
  //       Images/gispy_seq/Comp 865.jpg
  //       Images/gispy_seq/Comp 866.jpg
  //       Images/gispy_seq/Comp 867.jpg
  //       Images/gispy_seq/Comp 868.jpg
  //       Images/gispy_seq/Comp 869.jpg
  //       Images/gispy_seq/Comp 870.jpg
  //       Images/gispy_seq/Comp 871.jpg
  //       Images/gispy_seq/Comp 872.jpg
  //       Images/gispy_seq/Comp 872.jpg
  //       Images/gispy_seq/Comp 873.jpg
  //       Images/gispy_seq/Comp 874.jpg
  //       Images/gispy_seq/Comp 875.jpg
  //       Images/gispy_seq/Comp 876.jpg
  //       Images/gispy_seq/Comp 877.jpg
  //       Images/gispy_seq/Comp 878.jpg
  //       Images/gispy_seq/Comp 879.jpg
  //       Images/gispy_seq/Comp 880.jpg
  //       Images/gispy_seq/Comp 881.jpg
  //       Images/gispy_seq/Comp 882.jpg
  //       Images/gispy_seq/Comp 883.jpg
  //       Images/gispy_seq/Comp 884.jpg
  //       Images/gispy_seq/Comp 885.jpg
  //       Images/gispy_seq/Comp 886.jpg
  //       Images/gispy_seq/Comp 887.jpg
  //       Images/gispy_seq/Comp 888.jpg
  //       Images/gispy_seq/Comp 889.jpg
  //       Images/gispy_seq/Comp 890.jpg
  //       Images/gispy_seq/Comp 891.jpg
  //  `;
  //       return data.split("\n")[index];
  //     }

  //     const frameCount = 90;

  //     const images = [];
  //     const imageSeq = {
  //       frame: 1,
  //     };

  //     for (let i = 0; i < frameCount; i++) {
  //       const img = new Image();
  //       img.src = files(i);
  //       images.push(img);
  //     }

  //     gsap.to(imageSeq, {
  //       frame: frameCount - 1,
  //       snap: "frame",
  //       ease: `none`,
  //       scrollTrigger: {
  //         scrub: 0.15,
  //         trigger: ".circle_line_gispy",
  //         //   set start end according to preference
  //         start: "top top",
  //         end: "300% center",
  //         // scroller: `#main`,
  //       },
  //       onUpdate: render,
  //     });

  //     images[1].onload = render;

  //     function render() {
  //       scaleImage(images[imageSeq.frame], context);
  //     }

  //     function scaleImage(img, ctx) {
  //       var canvas = ctx.canvas;
  //       var hRatio = canvas.width / img.width;
  //       var vRatio = canvas.height / img.height;
  //       var ratio = Math.min(hRatio, vRatio);
  //       var centerShift_x = (canvas.width - img.width * ratio) / 2;
  //       var centerShift_y = (canvas.height - img.height * ratio) / 2;
  //       ctx.clearRect(0, 0, canvas.width, canvas.height);
  //       ctx.drawImage(
  //         img,
  //         0,
  //         0,
  //         img.width,
  //         img.height,
  //         centerShift_x,
  //         centerShift_y,
  //         img.width * ratio,
  //         img.height * ratio,
  //       );
  //     }
  //     ScrollTrigger.create({
  //       trigger: ".circle_line_gispy",
  //       pin: true,
  //       // markers:true,
  //       // scroller: `#main`,
  //       //   set start end according to preference
  //       start: "top top",
  //       end: "300% center",
  //     });
  //   }
  //   canvas();

  // console.clear();
  // /* The encoding is super important here to enable frame-by-frame scrubbing. */

  // // ffmpeg -i ~/Downloads/Toshiba\ video/original.mov -movflags faststart -vcodec libx264 -crf 23 -g 1 -pix_fmt yuv420p output.mp4
  // // ffmpeg -i ~/Downloads/Toshiba\ video/original.mov -vf scale=960:-1 -movflags faststart -vcodec libx264 -crf 20 -g 1 -pix_fmt yuv420p output_960.mp4

  // const video = document.querySelector(".video-background");
  // let src = video.currentSrc || video.src;
  // console.log(video, src);

  // /* Make sure the video is 'activated' on iOS */
  // function once(el, event, fn, opts) {
  //   var onceFn = function (e) {
  //     el.removeEventListener(event, onceFn);
  //     fn.apply(this, arguments);
  //   };
  //   el.addEventListener(event, onceFn, opts);
  //   return onceFn;
  // }

  // once(document.documentElement, "touchstart", function (e) {
  //   video.play();
  //   video.pause();
  // });

  // /* ---------------------------------- */
  // /* Scroll Control! */

  // gsap.registerPlugin(ScrollTrigger);

  // let tl = gsap.timeline({
  //   defaults: { duration: 1 },
  //   scrollTrigger: {
  //     trigger: ".circle_line_gispy",
  //     start: "top top",
  //     end: "300% center",
  //     scrub: 2,
  //     pin: ".circle_line_gispy",
  //   },
  // });

  // once(video, "loadedmetadata", () => {
  //   tl.fromTo(
  //     video,
  //     {
  //       currentTime: 0,
  //     },
  //     {
  //       currentTime: video.duration || 1,
  //     },
  //   );
  // });

  // /* When first coded, the Blobbing was important to ensure the browser wasn't dropping previously played segments, but it doesn't seem to be a problem now. Possibly based on memory availability? */
  // setTimeout(function () {
  //   if (window["fetch"]) {
  //     fetch(src)
  //       .then((response) => response.blob())
  //       .then((response) => {
  //         var blobURL = URL.createObjectURL(response);

  //         var t = video.currentTime;
  //         once(document.documentElement, "touchstart", function (e) {
  //           video.play();
  //           video.pause();
  //         });

  //         video.setAttribute("src", blobURL);
  //         video.currentTime = t + 0.01;
  //       });
  //   }
  // }, 1000);

  /* ---------------------------------- */




  // console.clear();
  // /* The encoding is super important here to enable frame-by-frame scrubbing. */

  // // ffmpeg -i ~/Downloads/Toshiba\ video/original.mov -movflags faststart -vcodec libx264 -crf 23 -g 1 -pix_fmt yuv420p output.mp4
  // // ffmpeg -i ~/Downloads/Toshiba\ video/original.mov -vf scale=960:-1 -movflags faststart -vcodec libx264 -crf 20 -g 1 -pix_fmt yuv420p output_960.mp4

  // const video2 = document.querySelector(".video-background2");
  // let src2 = video2.currentSrc || video2.src2;
  // console.log(video2);
  // console.log(src2);

  // /* Make sure the video is 'activated' on iOS */
  // function once(el2, event2, fn2, opts2) {
  //   var onceFn2 = function (e2) {
  //     el2.removeEventListener(event2, onceFn2);
  //     fn2.apply(this, arguments);
  //   };
  //   el2.addEventListener(event2, onceFn2, opts2);
  //   return onceFn2;
  // }

  // once(document.documentElement, "touchstart", function (e2) {
  //   video2.play();
  //   video2.pause();
  // });

  // /* ---------------------------------- */
  // /* Scroll Control! */

  // // gsap.registerPlugin(ScrollTrigger);

  // let tl2 = gsap.timeline({
  //   defaults: { duration: 1 },
  //   scrollTrigger: {
  //     trigger: ".circle_line_queen",
  //     start: "0% 42%",
  //     end: "300% center",
  //     scrub: 2,
  //     pin: ".circle_line_queen",
  //   },
  // });

  // once(video2, "loadedmetadata", () => {
  //   tl2.fromTo(
  //     video2,
  //     {
  //       currentTime: 0,
  //     },
  //     {
  //       currentTime: video2.duration || 1,
  //     },
  //   );
  // });

  // /* When first coded, the Blobbing was important to ensure the browser wasn't dropping previously played segments, but it doesn't seem to be a problem now. Possibly based on memory availability? */
  // setTimeout(function () {
  //   if (window["fetch"]) {
  //     fetch(src2)
  //       .then((response2) => response2.blob())
  //       .then((response2) => {
  //         var blobURL2 = URL.createObjectURL(response2);

  //         var t2 = video2.currentTime;
  //         once(document.documentElement, "touchstart", function (e2) {
  //           video2.play();
  //           video2.pause();
  //         });

  //         video2.setAttribute("src", blobURL2);
  //         video2.currentTime = t2 + 0.01;
  //       });
  //   }
  // }, 1000);

  /* ---------------------------------- */


  // console.clear();
  // /* The encoding is super important here to enable frame-by-frame scrubbing. */

  // // ffmpeg -i ~/Downloads/Toshiba\ video/original.mov -movflags faststart -vcodec libx264 -crf 23 -g 1 -pix_fmt yuv420p output.mp4
  // // ffmpeg -i ~/Downloads/Toshiba\ video/original.mov -vf scale=960:-1 -movflags faststart -vcodec libx264 -crf 20 -g 1 -pix_fmt yuv420p output_960.mp4

  // const video3 = document.querySelector(".video-background3");
  // let src3 = video3.currentSrc || video2.src3;
  // console.log(video3);
  // console.log(src3);

  // /* Make sure the video is 'activated' on iOS */
  // function once(el3, event3, fn3, opts3) {
  //   var onceFn3 = function (e3) {
  //     el3.removeEventListener(event3, onceFn3);
  //     fn3.apply(this, arguments);
  //   };
  //   el3.addEventListener(event3, onceFn3, opts3);
  //   return onceFn3;
  // }

  // once(document.documentElement, "touchstart", function (e3) {
  //   video3.play();
  //   video3.pause();
  // });

  // /* ---------------------------------- */
  // /* Scroll Control! */

  // // gsap.registerPlugin(ScrollTrigger);

  // let tl3 = gsap.timeline({
  //   defaults: { duration: 1 },
  //   scrollTrigger: {
  //     trigger: ".sundy_times_ggr",
  //     start: "0% top",
  //     end: "300% center",
  //     scrub: 2,
  //     pin: ".sundy_times_ggr",
  //   },
  // });

  // once(video3, "loadedmetadata", () => {
  //   tl3.fromTo(
  //     video3,
  //     {
  //       currentTime: 0,
  //     },
  //     {
  //       currentTime: video3.duration || 1,
  //     },
  //   );
  // });

  // /* When first coded, the Blobbing was important to ensure the browser wasn't dropping previously played segments, but it doesn't seem to be a problem now. Possibly based on memory availability? */
  // setTimeout(function () {
  //   if (window["fetch"]) {
  //     fetch(src3)
  //       .then((response3) => response3.blob())
  //       .then((response3) => {
  //         var blobURL3 = URL.createObjectURL(response3);

  //         var t3 = video3.currentTime;
  //         once(document.documentElement, "touchstart", function (e3) {
  //           video3.play();
  //           video3.pause();
  //         });

  //         video3.setAttribute("src", blobURL3);
  //         video3.currentTime = t3 + 0.01;
  //       });
  //   }
  // }, 1000);

  /* ---------------------------------- */







  /**
 * Full screen laptop
 */

// mm.add("(min-width: 1800px)", () => {
//   ScrollSmoother.create({
//     content: "#content",
//     // wrapper: "#wrapper",
//     speed: 0.5,
//     normalizeScroll: false,
//     smooth: 1, // how long (in seconds) it takes to "catch up" to the native scroll position
//     effects: true, // looks for data-speed and data-lag attributes on elements
//     smoothTouch: false, // much shorter smoothing time on touch devices (default is NO smoothing on touch devices)
//   });

//   // ScrollTrigger.normalizeScroll(true);
//   /**
//    * Abhilash Journey Acroops the GGR Text & Three Photos Animation
//    */
//   const startWord = gsap.timeline({
//     scrollTrigger: {
//       trigger: ".the_start",
//       scrub: 1,
//       start: "40% 100%",
//       end: "100% 10%",
//     },
//   });

//   startWord.from(
//     ".bayanat_abilash_title",
//     { autoAlpha: 0, y: -30, ease: "power2", duration: 3 },
//     "-=3.3",
//   );

//   const ThreePhotos = gsap.timeline({
//     scrollTrigger: {
//       trigger: ".three_photos",
//       scrub: 1,
//       start: "40% 100%",
//       end: "100% 10%",
//       // markers: true,
//     },
//   });
//   ThreePhotos.from(
//     ".mid_photo",
//     {
//       autoAlpha: 0,
//       y: 30,
//       ease: "power2",
//       duration: 3,
//     },
//     "-=3.3",
//   );
//   ThreePhotos.from(
//     ".right_photo",
//     { autoAlpha: 0, x: 50, rotation: 65, ease: "power2", duration: 3 },
//     "-=2.8",
//   );
//   ThreePhotos.from(
//     ".left_photo",
//     { autoAlpha: 0, x: -30, rotation: -65, ease: "power2", duration: 3 },
//     "-=2.8",
//   );

//   /**
//    * Gipsy section animation
//    */

//   const gipsyMoth = gsap.timeline({
//     scrollTrigger: {
//       trigger: ".circle_line_gispy",
//       scrub: 2,
//       start: "top 20%",
//       end: "+=700",
//       // pin: true,
//       // pinSpacing: true,
//       // endTrigger: ".ss_03",
//       // markers: true,
//     },
//   });
//   const gipsyMothPara1 = gsap.timeline({
//     scrollTrigger: {
//       trigger: ".circle_line_gispy",
//       scrub: 2,
//       start: "top 20%",
//       end: "+=3000",
//       // pin: true,
//       // pinSpacing: true,
//       // endTrigger: ".ss_03"
//       // markers: true,
//     },
//   });

//   gsap.from(".ver_line", {
//     scrollTrigger: {
//       trigger: ".circle_line_gispy",
//       scrub: 1,
//       start: "top 80%",
//       end: "+=1000",
//     },
//     scaleY: 0,
//     transformOrigin: "top center",
//     ease: "power2",
//     duration: 3,
//   });

//   gipsyMoth.from(".gispy_two", {
//     y: 100,
//     autoAlpha: 0,
//     ease: "power4",
//     duration: 10,
//   });
//   gipsyMoth.from(
//     ".img_one_text",
//     {
//       x: 30,
//       autoAlpha: 0,
//       ease: "power4",
//       duration: 10,
//     },
//     "-=10",
//   );

//   gipsyMothPara1.to(".paragraph_01", {
//     autoAlpha: 1,
//     ease: "power2",
//     duration: 2,
//   });
//   gipsyMothPara1.to(".paragraph_01_out", {
//     autoAlpha: 0,
//     ease: "power2",
//     duration: 1.5,
//   });
//   gipsyMothPara1.to(".paragraph_02", {
//     autoAlpha: 1,
//     ease: "power2",
//     duration: 2,
//   });
//   gipsyMothPara1.to(".paragraph_02_out", {
//     autoAlpha: 0,
//     ease: "power2",
//     duration: 1.5,
//   });

//   gipsyMothPara1.to(".paragraph_03", {
//     autoAlpha: 1,
//     ease: "power2",
//     duration: 2,
//   });

//   gipsyMothPara1.to(".paragraph_03_out", {
//     autoAlpha: 0,
//     ease: "power2",
//     duration: 1.5,
//   });

//   gipsyMothPara1.to(".paragraph_04", {
//     autoAlpha: 1,
//     ease: "power2",
//     duration: 2,
//   });
//   gipsyMothPara1.to(".paragraph_04_out", {
//     autoAlpha: 0,
//     ease: "power2",
//     duration: 1.5,
//   });

//   gipsyMothPara1.to(".paragraph_05", {
//     autoAlpha: 1,
//     ease: "power2",
//     duration: 2,
//   });
//   gipsyMothPara1.to(".paragraph_05_out", {
//     autoAlpha: 0,
//     ease: "power2",
//     duration: 1.5,
//   });

//   gipsyMothPara1.to(".paragraph_06", {
//     autoAlpha: 1,
//     ease: "power2",
//     duration: 2,
//   });

//   gsap.from(
//     ".ver_line_02",
//     {
//       scrollTrigger: {
//         trigger: ".circle_line_gispy",
//         scrub: 1,
//         start: "top 0%",
//         end: "+=6000",
//         // markers: true,
//         // delay: 50,
//       },
//       scaleY: 0,
//       transformOrigin: "top top",
//       ease: "power2",
//       duration: 3,
//     },
//     "+=35",
//   );

//   /**
//    * Gipsy Section LottieAnimation
//    */

//   let playhead = { frame: 0, totalFrames: 0 };
//   let totalFrames = 0;
//   let animation = lottie.loadAnimation({
//     container: document.querySelector(".gispy_two"),
//     renderer: "svg",
//     loop: false,
//     autoplay: false,
//     path: "LottieAnimation/GISPY_Boat_F.json",
//   });

//   animation.addEventListener("DOMLoaded", function () {
//     // no idea why this isn't being called?
//     // console.log("loaded");
//     // console.log(animation.totalFrames);
//     playhead.totalFrames = animation.totalFrames - 1;
//     ScrollTrigger.refresh();
//   });

//   gsap.to(playhead, {
//     frame: () => playhead.totalFrames,
//     ease: "none",
//     onUpdate: () => {
//       // console.log('frame value', animation.totalFrames, 'playhead value', playhead.frame);
//       animation.goToAndStop(playhead.frame, true);
//     },
//     scrollTrigger: {
//       trigger: ".circle_line_gispy",
//       start: "top 10%",
//       end: "300% center",
//       // markers: true,
//       scrub: 2,
//       // pinSpacing: true,
//       pin: ".circle_line_gispy",
//       // pinType: "fixed",
//       invalidateOnRefresh: true,
//     },
//   });

//   gsap.from(".ver_line_03", {
//     scrollTrigger: {
//       trigger: ".circle_line_queen",
//       scrub: 1,
//       start: "top 50%",
//       end: "+=1000",
//     },
//     scaleY: 0,
//     transformOrigin: "top center",
//     ease: "power2",
//     duration: 3,
//   });

//   /**
//    * Queen Section Animation
//    */

//   const queen = gsap.timeline({
//     scrollTrigger: {
//       trigger: ".circle_line_queen",
//       scrub: 2,
//       start: "top 50%",
//       end: "+=700",
//       // pin: true,
//       // pinSpacing: true,
//       // endTrigger: ".ss_03",
//       // markers: true,
//     },
//   });

//   queen.from(".queen_01", {
//     y: 100,
//     autoAlpha: 0,
//     ease: "power4",
//     duration: 10,
//   });
//   queen.from(
//     ".img_two_text",
//     {
//       x: -30,
//       autoAlpha: 0,
//       ease: "power4",
//       duration: 10,
//     },
//     "-=10",
//   );

//   gsap.from(
//     ".ver_line_04",
//     {
//       scrollTrigger: {
//         trigger: ".queen_01",
//         scrub: 2,
//         start: "top 0%",
//         end: "+=6000",
//         // markers: true,
//         // delay: 50,
//       },
//       scaleY: 0,
//       transformOrigin: "top top",
//       ease: "power2",
//       duration: 3,
//     },
//     "+=35",
//   );

//   /**
//    * Queen Section LottieAnimation
//    */

//   let playhead_02 = { frame: 0, totalFrames: 0 };
//   let totalFrames_02 = 0;
//   let animation_02 = lottie.loadAnimation({
//     container: document.querySelector(".queen_01"),
//     renderer: "svg",
//     loop: false,
//     autoplay: false,
//     path: "LottieAnimation/Queen.json",
//   });

//   console.log(animation_02.totalFrames);

//   animation_02.addEventListener("DOMLoaded", function () {
//     // no idea why this isn't being called?
//     // console.log("loaded");
//     // console.log(animation.totalFrames);
//     playhead_02.totalFrames = animation_02.totalFrames - 1;
//     ScrollTrigger.refresh();
//   });
//   // ScrollTrigger.normalizeScroll(true);

//   gsap.to(playhead_02, {
//     frame: () => playhead_02.totalFrames,
//     ease: "none",
//     onUpdate: () => {
//       // console.log('frame value', animation.totalFrames, 'playhead value', playhead.frame);
//       animation_02.goToAndStop(playhead_02.frame, true);
//     },
//     scrollTrigger: {
//       trigger: ".circle_line_queen",
//       start: "0% 42%",
//       end: "300% center",
//       // markers: true,
//       scrub: 2,
//       // pinSpacing: true,
//       pin: ".circle_line_queen",
//       // pinType: "fixed",
//       invalidateOnRefresh: true,
//     },
//   });

//   /**
//    * GGR section animation
//    */

//   gsap.from(".ver_line_05", {
//     scrollTrigger: {
//       trigger: ".sundy_times_ggr",
//       scrub: 1,
//       start: "top 80%",
//       end: "+=1000",
//     },
//     scaleY: 0,
//     transformOrigin: "top center",
//     ease: "power2",
//     duration: 3,
//   });

//   const ggr = gsap.timeline({
//     scrollTrigger: {
//       trigger: ".sundy_times_ggr",
//       scrub: 2,
//       start: "top top",
//       end: "+=700",
//       // pin: true,
//       // pinSpacing: true,
//       // endTrigger: ".ss_03",
//       // markers: true,
//     },
//   });
//   const ggrPara = gsap.timeline({
//     scrollTrigger: {
//       trigger: ".sundy_times_ggr",
//       scrub: 2,
//       start: "top top",
//       end: "+=7000",
//       // pin: true,
//       // pinSpacing: true,
//       // endTrigger: ".ss_03",
//       // markers: true,
//     },
//   });
//   const ggr_01 = gsap.timeline({
//     scrollTrigger: {
//       trigger: ".sundy_times_ggr",
//       scrub: 2,
//       start: "top top",
//       end: "+=700",
//       // pin: true,
//       // pinSpacing: true,
//       // endTrigger: ".ss_03",
//       // markers: true,
//     },
//   });

//   // ggr.duration(5);

//   ggr_01.from(".ggr_two", {
//     y: 100,
//     autoAlpha: 0,
//     ease: "power4",
//     duration: 10,
//   });

//   ggr.from(
//     ".img_text_grr",
//     {
//       x: 30,
//       autoAlpha: 0,
//       ease: "power2",
//       duration: 10,
//     },
//     "-=10",
//   );

//   ggrPara.to(".paragraph_01_ggr", {
//     autoAlpha: 1,
//     ease: "power2",
//     duration: 2,
//   });
//   ggrPara.to(".paragraph_01_ggr_out", {
//     autoAlpha: 0,
//     ease: "power2",
//     duration: 1.5,
//   });
//   ggrPara.to(".paragraph_02_ggr", {
//     autoAlpha: 1,
//     ease: "power2",
//     duration: 2,
//   });
//   ggrPara.to(".paragraph_02_ggr_out", {
//     autoAlpha: 0,
//     ease: "power2",
//     duration: 1.5,
//   });

//   ggrPara.to(".paragraph_03_ggr", {
//     autoAlpha: 1,
//     ease: "power2",
//     duration: 2,
//   });

//   ggrPara.to(".paragraph_03_ggr_out", {
//     autoAlpha: 0,
//     ease: "power2",
//     duration: 1.5,
//   });

//   ggrPara.to(".paragraph_04_ggr", {
//     autoAlpha: 1,
//     ease: "power2",
//     duration: 2,
//   });
//   ggrPara.to(".paragraph_04_ggr_out", {
//     autoAlpha: 0,
//     ease: "power2",
//     duration: 1.5,
//   });

//   ggrPara.to(".paragraph_05_ggr", {
//     autoAlpha: 1,
//     ease: "power2",
//     duration: 2,
//   });
//   ggrPara.to(".paragraph_05_ggr_out", {
//     autoAlpha: 0,
//     ease: "power2",
//     duration: 1.5,
//   });

//   ggrPara.to(".paragraph_06_ggr", {
//     autoAlpha: 1,
//     ease: "power2",
//     duration: 2,
//   });

//   ggrPara.to(".paragraph_06_ggr_out", {
//     autoAlpha: 0,
//     ease: "power2",
//     duration: 1.5,
//   });
//   ggrPara.to(".paragraph_07_ggr", {
//     autoAlpha: 1,
//     ease: "power2",
//     duration: 2,
//   });

//   ggrPara.to(".paragraph_07_ggr_out", {
//     autoAlpha: 0,
//     ease: "power2",
//     duration: 1.5,
//   });
//   ggrPara.to(".paragraph_08_ggr", {
//     autoAlpha: 1,
//     ease: "power2",
//     duration: 2,
//   });

//   ggrPara.to(".paragraph_08_ggr_out", {
//     autoAlpha: 0,
//     ease: "power2",
//     duration: 1.5,
//   });

//   ggrPara.to(".paragraph_09_ggr", {
//     autoAlpha: 1,
//     ease: "power2",
//     duration: 2,
//   });

//   ggr.from(
//     ".ver_line_06",
//     {
//       scrollTrigger: {
//         trigger: ".sundy_times_ggr",
//         scrub: 1,
//         start: "top 0%",
//         end: "+=6000",
//         // markers: true,
//         // delay: 50,
//       },
//       scaleY: 0,
//       transformOrigin: "top top",
//       ease: "power2",
//       duration: 3,
//     },
//     "+=35",
//   );

//   /**
//    * GGR Section LottieAnimation
//    */

//   let playhead_03 = { frame: 0, totalFrames: 0 };
//   let totalFrames_03 = 0;
//   let animation_03 = lottie.loadAnimation({
//     container: document.querySelector(".ggr_two"),
//     renderer: "svg",
//     loop: false,
//     autoplay: false,
//     path: "LottieAnimation/GGR_04.json",
//   });

//   console.log(animation_03.totalFrames);

//   animation_03.addEventListener("DOMLoaded", function () {
//     // no idea why this isn't being called?
//     // console.log("loaded");
//     // console.log(animation.totalFrames);
//     playhead_03.totalFrames = animation_03.totalFrames - 1;
//     ScrollTrigger.refresh();
//   });

//   gsap.to(playhead_03, {
//     frame: () => playhead_03.totalFrames,
//     ease: "none",
//     onUpdate: () => {
//       // console.log('frame value', animation.totalFrames, 'playhead value', playhead.frame);
//       animation_03.goToAndStop(playhead_03.frame, true);
//     },
//     scrollTrigger: {
//       trigger: ".sundy_times_ggr",
//       start: "0% top",
//       end: "+=7000",
//       // markers: true,
//       scrub: 2,
//       // pinSpacing: true,
//       pin: ".sundy_times_ggr",
//       // pinType: "fixed",
//       invalidateOnRefresh: true,
//       onLeave: () => {
//         gsap.to("body", { duration: 1.0, backgroundColor: "#000000" });
//         gsap.to(".ggr_two", { duration: 1.0, borderColor: "#ffffff" });
//         gsap.to(".ver_line_06", { duration: 1.0, backgroundColor: "#ffffff" });
//         gsap.to(".ver_line_05", { duration: 1.0, backgroundColor: "#ffffff" });
//         gsap.to(".img_con h2", { duration: 1.0, color: "#ffffff" });
//         gsap.to(".paragraph", { duration: 1.0, color: "#ffffff" });
//         gsap.to(".date_cir_05", { duration: 1.0, autoAlpha: 1 });
//         // gsap.from(".Abhilash_Rescue_Section", {
//         //   duration: 1.0,
//         //   autoAlpha: 0,
//         //   y: 50,
//         // });
//       },

//       onEnterBack: () => {
//         gsap.to("body", { duration: 1.0, backgroundColor: "#ffffff" });
//         gsap.to(".ggr_two", { duration: 1.0, borderColor: "#000000" });
//         gsap.to(".ver_line_06", { duration: 1.0, backgroundColor: "#000000" });
//         gsap.to(".ver_line_05", { duration: 1.0, backgroundColor: "#000000" });
//         gsap.to(".img_con h2", { duration: 1.0, color: "#002cc4" });
//         gsap.to(".paragraph", { duration: 1.0, color: "#000000" });
//         gsap.to(".date_cir_05", { duration: 1.0, autoAlpha: 0 });
//       },
//     },
//   });

//   let playhead_04 = { frame: 0, totalFrames: 0 };
//   let totalFrames_04 = 0;
//   let animation_04 = lottie.loadAnimation({
//     container: document.querySelector(".Abhilash_rescue_02"),
//     renderer: "svg",
//     loop: false,
//     autoplay: false,
//     path: "LottieAnimation/Abhilash_Rescue.json",
//   });

//   console.log(animation_04.totalFrames);

//   animation_04.addEventListener("DOMLoaded", function () {
//     // no idea why this isn't being called?
//     // console.log("loaded");
//     // console.log(animation.totalFrames);
//     playhead_04.totalFrames = animation_04.totalFrames - 1;
//     ScrollTrigger.refresh();
//   });
//   // ScrollTrigger.normalizeScroll(true);

//   gsap.to(playhead_04, {
//     frame: () => playhead_04.totalFrames,
//     ease: "none",
//     onUpdate: () => {
//       // console.log('frame value', animation.totalFrames, 'playhead value', playhead.frame);
//       animation_04.goToAndStop(playhead_04.frame, true);
//     },
//     scrollTrigger: {
//       trigger: ".Abhilash_Rescue_Lines_container",
//       start: "center center",
//       end: "+=3500",
//       // markers: true,
//       scrub: 2,
//       pinSpacing: false,
//       pin: ".pinned_abhilash",
//       // pinType: "fixed",
//       invalidateOnRefresh: true,
//     },
//   });

//   // ScrollTrigger.create({
//   //   trigger: ".img_con_Abhilash",
//   //   markers: true,
//   //   start: "bottom bottom",
//   //   end: "bottom 50%",

//   //   onEnter: () => {
//   //     gsap.to("body", { duration: 1.0, backgroundColor: "#000000" });
//   //     gsap.to(".ver_line_06", { duration: 1.0, backgroundColor: "#ffffff" });
//   //   },

//   //   onLeaveBack: () => {
//   //     gsap.to("body", { duration: 1.0, backgroundColor: "#ffffff" });
//   //     gsap.to(".ver_line_06", { duration: 1.0, backgroundColor: "#000000" });
//   //   },
//   // });
// });